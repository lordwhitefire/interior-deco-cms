import { defineField, defineType } from 'sanity'

export const aiAnswer = defineType({
  name: 'aiAnswer',
  title: 'AI Answer',
  type: 'document',
  fields: [
    defineField({
      name: 'question',
      title: 'User Question',
      type: 'string',
      validation: Rule => Rule.required().max(200)
    }),
    defineField({
      name: 'answer',
      title: 'AI Generated Answer',
      type: 'text',
      rows: 8,
      validation: Rule => Rule.required().min(50).max(2000)
    }),
    defineField({
      name: 'searchTerms',
      title: 'Search Keywords',
      type: 'array',
      of: [{type: 'string'}],
      description: 'Related search terms that should trigger this answer (e.g., "kitchen timeline", "renovation duration")',
      validation: Rule => Rule.required().min(1).max(10)
    }),
    defineField({
      name: 'slug',
      title: 'URL Slug',
      type: 'slug',
      options: {
        source: 'question',
        maxLength: 96,
        slugify: input => input
          .toLowerCase()
          .replace(/\s+/g, '-')
          .replace(/[^a-z0-9-]/g, '')
          .slice(0, 96)
      },
      validation: Rule => Rule.required()
    }),
    defineField({
      name: 'relatedProjects',
      title: 'Related Portfolio Projects',
      type: 'array',
      of: [{
        type: 'reference',
        to: [{type: 'project'}]
      }],
      description: 'Portfolio projects to show alongside this answer'
    }),
    defineField({
      name: 'relatedArticles',
      title: 'Related Blog Articles',
      type: 'array',
      of: [{
        type: 'reference',
        to: [{type: 'article'}]
      }],
      description: 'Blog articles to show alongside this answer'
    }),
    defineField({
      name: 'createdAt',
      title: 'Created At',
      type: 'datetime',
      initialValue: () => new Date().toISOString()
    }),
    defineField({
      name: 'helpfulCount',
      title: 'Helpful Votes',
      type: 'number',
      initialValue: 0,
      description: 'Number of users who found this helpful'
    }),
    defineField({
      name: 'searchCount',
      title: 'Times Searched',
      type: 'number',
      initialValue: 0,
      description: 'How many times this answer has been shown'
    }),
    defineField({
      name: 'isGenerated',
      title: 'AI Generated',
      type: 'boolean',
      initialValue: true,
      description: 'Whether this answer was generated by AI'
    })
  ],
  preview: {
    select: {
      title: 'question',
      subtitle: 'answer',
      createdAt: 'createdAt',
      searchCount: 'searchCount'
    },
    prepare(selection) {
      const {title, subtitle, createdAt, searchCount} = selection
      return {
        title: title,
        subtitle: subtitle ? `${subtitle.substring(0, 80)}... â€¢ Searched: ${searchCount || 0} times` : '',
        createdAt: createdAt
      }
    }
  },
  orderings: [
    {
      title: 'Search Count, High to Low',
      name: 'searchCountDesc',
      by: [
        {field: 'searchCount', direction: 'desc'}
      ]
    },
    {
      title: 'Recently Created',
      name: 'createdAtDesc',
      by: [
        {field: 'createdAt', direction: 'desc'}
      ]
    }
  ]
})